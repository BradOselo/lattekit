grammar io.lattekit.dsl.LatteCSS with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate latteCSS "http://www.lattekit.io/dsl/LatteCSS"

CSS:
	definitions+=Definition+
;

Definition:
	selector+=Selector ( ',' selector+=Selector )*
	'{'
	properties+=CSSProperty+
	'}'
;

Selector:
	simpleSelector+=SimpleSelector+
;

SimpleSelector:
	(element=ID ) |
	( id=IdSelector (pseudoClass=PseudoClassSelector)?) |
	( class=ClassSelector (pseudoClass=PseudoClassSelector)? )
;

IdSelector:
	'#' id=ID
;

ClassSelector:
	'.' class=ID
;

PseudoClassSelector:
	':' value=ID
;

CSSProperty:
	(
			TransitionProperty |
			FontFamilyProperty |
			FontStyleProperty |
			SizeProperty |
			ShorthandSizeProperty |
			ShorthandColorProperty |
			BorderRadiusProperty |
			ViewSizeProperty |
			PaintProperty |
			ColorProperty |
			DrawableProperty |
			BackgroundRepeatProperty |
			BackgroundFilterTypeProperty |
			BackgroundGravityProperty |
			BackgroundFilterProperty |
			BorderProperty |
			AlignmentProperty
	) ';'
;


FontFamilyProperty:
	property=(
			'font-family'
	) ':' value=STRING
;


FontStyleProperty:
	property=(
			'font-style'
	) ':' value=('normal' | 'bold'  | 'bold-italic')
;


ViewSizeProperty:
	property=(
			'width' | 'height'
	) ':' value=ViewSizeValue
;


ShorthandSizeProperty:
	property=(
			'border-width' | 'border-radius' | 'margin'  | 'padding'
	) ':' values+=SizeValue+
;

BorderRadiusProperty:
	property=(
			'border-top-left-radius' | 'border-top-right-radius' | 'border-bottom-left-radius' | 'border-bottom-right-radius'
	) ':' values+=SizeValue+
;


SizeProperty:
	property=(
			'border-left-width' | 'border-right-width'  | 'border-top-width' | 'border-bottom-width'
			| 'font-size'
			| 'translate-x' | 'translate-y'
			| 'margin-left' | 'margin-right' | 'margin-top' | 'margin-bottom'
			| 'padding-left' | 'padding-right' | 'padding-top' | 'padding-bottom'
			| 'x' | 'y'
			| 'elevation'
	) ':' value=SizeValue
;

PaintProperty:
	property=(
			'background'
	) ':' value=PaintValue
;


TransitionProperty:
	property=('transition') ':' transitions+=TransitionValue (',' transitions+=TransitionValue)*
;

TransitionValue:
	propertyName=PropertyNameValue  duration=TimeValue (timingFunction=TimingFunction)? (delay=TimeValue)?
;

DrawableProperty:
	property=('background-drawable') ':' value=STRING
;
BackgroundRepeatProperty:
	property=('background-repeat') ':' values+=(RepeatValue) values+=(RepeatValue)?
;

BorderProperty:
	property=('border' | 'border-top' | 'border-bottom' | 'border-left' | 'border-right') ':' width=SizeValue? style=('solid' | 'dashed' | 'dotted') color=ColorValue?
;
BackgroundFilterProperty:
	property=('background-filter') ':' color=ColorValue filter=FilterValue?
;


RepeatValue: 'repeat-x'|'mirror-x'|'clamp-x'|'no-repeat-x' | 'repeat-y'|'mirror-y'|'clamp-y'|'no-repeat-y';

GravityValue: 'top' | 'bottom' | 'left' | 'right' | 'center_vertical' | 'fill_vertical' | 'center_horizontal' |
	'fill_horizontal' | 'center' | 'fill' | 'clip_vertical' | 'clip_horizontal' | 'start' | 'end'
;
BackgroundGravityProperty:
	property=('background-gravity') ':' values+=GravityValue (',' values+=GravityValue)*
;

FilterValue: 'add' | 'clear' | 'darken' | 'dst' | 'dst_atop' | 'dst_in' | 'dst_out' |
	'dst_over' | 'lighten' | 'multiply' | 'overlay' | 'screen' | 'src' | 'src_atop' | 'src_in' | 'src_out'
	| 'src_over' | 'xor'
;
BackgroundFilterTypeProperty:
	property=('background-filter-type') ':' value=FilterValue
;

ShorthandColorProperty:
	property=('border-color') ':' values+=ColorValue+
;

ColorProperty:
	property=('border-top-color' |  'border-left-color' | 'border-right-color' | 'border-bottom-color' |
	'ripple-color' | 'background-color' | 'text-color' |  'background-filter-color'
	) ':' value=ColorValue
;

AlignmentProperty:
	property = (
			'text-align'
	) ':' value=('left' | 'center' | 'right' | 'justify')
;

TimingFunction:
	'accelerate-decelerate' | 'accelerate' | 'anticipate' | 'anticipate-overshoot' | 'bounce' |
	'cycle' | 'decelerate' | 'fast-out' | 'fast-out-slow' | 'linear' | 'linear-out' | 'overshoot'

;

//
// ---------------
// Values
// ---------------


PropertyNameValue:
	'margin' | 'margin-top' | 'margin-bottom' | 'margin-left' | 'margin-right' |
	'padding' | 'padding-top' | 'padding-bottom' | 'padding-left' | 'padding-right' |
	'width' | 'height' | 'translateX' | 'translateY' | 'x' | 'y' | 'elevation' | 'font-size' |
	'border-radius' | 'border-top-left-radius' | 'border-top-right-radius' | 'border-bottom-left-radius' | 'border-bottom-right-radius' |
	'border-width' | 'border-left-width' | 'border-right-width'  | 'border-top-width' | 'border-bottom-width' |
	'border'


;

NumberValue:
	IntegerValue | RealValue
;

IntegerValue:
	INT
;

RealValue:
	REAL
;

TimeValue:
	time=NumberValue unit=('s' | 'ms')
;


ViewSizeValue:
	value = SizeValue | dynamic=('match_parent' | 'wrap_content')
;

SizeValue:
	value = NumberValue (dimension=('dp'|'px'|'sp'|'pt'|'mm'))?
;

FontStyleValue:
	'normal' | 'italic'
;

FontFamily:
	STRING
;

PaintValue:
	LinearGradient | RadialGradient | ColorValue
;


LinearGradient:
	'linear' '(' x1=SizeValue ',' y1=SizeValue ')' 'to' '(' x2=SizeValue ',' y2=SizeValue ')' 'stops' ( '(' stops+=StopValue ')' )+ ( 'repeat' | 'reflect' )?
;

RadialGradient:
	'radial' ('(' cx=SizeValue ',' cy=SizeValue ')' ',' )? radius=SizeValue ( 'focus' '(' fx=SizeValue ',' fy=SizeValue ')' ) 'stops' ( '(' stops+=StopValue ')' )+ ( 'repeat' | 'reflect' )?
;

StopValue:
	pos=SizeValue ',' color=ColorValue
;

ColorValue:
	(namedColor = NamedColor) |
	(rgb = RGBColor)
;


NamedColor:
	'aliceblue'      | 'antiquewhite'     | 'aqua'                | 'aquamarine'      |
	'azure'          | 'beige'            | 'bisque'              | 'black'           |
	'blanchedalmond' | 'blue'             | 'blueviolet'          | 'brown'           |
	'burlywood'      | 'cadetblue'        | 'chartreuse'          | 'chocolate'       |
	'coral'          | 'cornflowerblue'   | 'cornsilk'            | 'crimson'         |
	'cyan'           | 'darkblue'         | 'darkcyan'            | 'darkgoldenrod'   |
	'darkgray'       | 'darkgreen'        | 'darkgrey'            | 'darkkhaki'       |
	'darkmagenta'    | 'darkolivegreen'   | 'darkorange'          | 'darkorchid'      |
	'darkred'        | 'darksalmon'       | 'darkseagreen'        | 'darkslateblue'   |
	'darkslategray'  | 'darkslategrey'    | 'darkturquoise'       | 'darkviolet'      |
	'deeppink'       | 'deepskyblue'      | 'dimgray'             | 'dimgrey'         |
	'dodgerblue'     | 'firebrick'        | 'floralwhite'         | 'forestgreen'     |
	'fuchsia'        | 'gainsboro'        | 'ghostwhite'          | 'gold'            |
	'goldenrod'      | 'gray'             | 'green'               | 'greenyellow'     |
	'grey'           | 'honeydew'         | 'hotpink'             | 'indianred'       |
	'indigo'         | 'ivory'            | 'khaki'               | 'lavender'        |
	'lavenderblush'  | 'lawngreen'        | 'lemonchiffon'        | 'lightblue'       |
	'lightcoral'     | 'lightcyan'        | 'lightgoldenrodyellow'| 'lightgray'       |
	'lightgreen'     | 'lightgrey'        | 'lightpink'           | 'lightsalmon'     |
	'lightseagreen'  | 'lightskyblue'     | 'lightslategray'      | 'lightslategrey'  |
	'lightsteelblue' | 'lightyellow'      | 'lime'                | 'limegreen'       |
	'linen'          | 'magenta'          | 'maroon'              | 'mediumaquamarine'|
	'mediumblue'     | 'mediumorchid'     | 'mediumpurple'        | 'mediumseagreen'  |
	'mediumslateblue'| 'mediumspringgreen'| 'mediumturquoise'     | 'mediumvioletred' |
	'midnightblue'   | 'mintcream'        | 'mistyrose'           | 'moccasin'        |
	'navajowhite'    | 'navy'             | 'oldlace'             | 'olive'           |
	'olivedrab'      | 'orange'           | 'orangered'           | 'orchid'          |
	'palegoldenrod'  | 'palegreen'        | 'paleturquoise'       | 'palevioletred'   |
	'papayawhip'     | 'peachpuff'        | 'peru'                | 'pink'            |
	'plum'           | 'powderblue'       | 'purple'              | 'red'             |
	'rosybrown'      | 'royalblue'        | 'saddlebrown'         | 'salmon'          |
	'sandybrown'     | 'seagreen'         | 'seashell'            | 'sienna'          |
	'silver'         | 'skyblue'          | 'slateblue'           | 'slategray'       |
	'slategrey'      | 'snow'             | 'springgreen'         | 'steelblue'       |
	'tan'            | 'teal'             | 'thistle'             | 'tomato'          |
	'turquoise'      | 'violet'           | 'wheat'               | 'white'           |
	'whitesmoke'     | 'yellow'           | 'yellowgreen'         | 'transparent'
;

RGBColor:
	hex=HEX_NUMBER
	|
	('rgb' '(' r=IntegerValue ',' g=IntegerValue ',' b=IntegerValue ')' )
	|
	('rgba' '(' r=IntegerValue ',' g=IntegerValue ',' b=IntegerValue ',' alpha=NumberValue ')' )
;

HSBColor:
	('hsb' '(' hue=NumberValue ',' saturation=NumberValue '%' ',' brightness=NumberValue '%' ')')
	|
	('hsba' '(' hue=NumberValue ',' saturation=NumberValue '%' ',' brightness=NumberValue '%' ',' alpha=NumberValue ')')
;

ColorFunction:
	( 'derive' '(' orig=ColorValue ',' mod=NumberValue '%' ')' )
	|
	( 'ladder' '(' orig=ColorValue ')' 'stops' ( '(' stopNumbers+=NumberValue ',' stopColors+=ColorValue  ')' )+ )
;

terminal REAL returns ecore::EDouble: ('-')?('0'..'9')+ '.' ('0'..'9')+;
terminal HEX_NUMBER : '#' ('a'..'f'|'A'..'F'|'0'..'9')*;
