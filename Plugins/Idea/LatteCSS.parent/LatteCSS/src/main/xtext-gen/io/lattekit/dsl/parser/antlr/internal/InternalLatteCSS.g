/*
 * generated by Xtext 2.9.0.beta5
 */
grammar InternalLatteCSS;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package io.lattekit.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package io.lattekit.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import io.lattekit.dsl.services.LatteCSSGrammarAccess;

}

@parser::members {

 	private LatteCSSGrammarAccess grammarAccess;
 	
    public InternalLatteCSSParser(TokenStream input, LatteCSSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "CSS";	
   	}
   	
   	@Override
   	protected LatteCSSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCSS
entryRuleCSS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCSSRule()); }
	 iv_ruleCSS=ruleCSS 
	 { $current=$iv_ruleCSS.current; } 
	 EOF 
;

// Rule CSS
ruleCSS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getCSSAccess().getDefinitionsDefinitionParserRuleCall_0()); 
	    }
		lv_definitions_0_0=ruleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCSSRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_0_0, 
        		"io.lattekit.dsl.LatteCSS.Definition");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	 iv_ruleDefinition=ruleDefinition 
	 { $current=$iv_ruleDefinition.current; } 
	 EOF 
;

// Rule Definition
ruleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getSelectorSelectorParserRuleCall_0_0()); 
	    }
		lv_selector_0_0=ruleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		add(
       			$current, 
       			"selector",
        		lv_selector_0_0, 
        		"io.lattekit.dsl.LatteCSS.Selector");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefinitionAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getSelectorSelectorParserRuleCall_1_1_0()); 
	    }
		lv_selector_2_0=ruleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		add(
       			$current, 
       			"selector",
        		lv_selector_2_0, 
        		"io.lattekit.dsl.LatteCSS.Selector");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefinitionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getPropertiesCSSPropertyParserRuleCall_3_0()); 
	    }
		lv_properties_4_0=ruleCSSProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_4_0, 
        		"io.lattekit.dsl.LatteCSS.CSSProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	 iv_ruleSelector=ruleSelector 
	 { $current=$iv_ruleSelector.current; } 
	 EOF 
;

// Rule Selector
ruleSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectorAccess().getSimpleSelectorSimpleSelectorParserRuleCall_0()); 
	    }
		lv_simpleSelector_0_0=ruleSimpleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectorRule());
	        }
       		add(
       			$current, 
       			"simpleSelector",
        		lv_simpleSelector_0_0, 
        		"io.lattekit.dsl.LatteCSS.SimpleSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleSimpleSelector
entryRuleSimpleSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleSelectorRule()); }
	 iv_ruleSimpleSelector=ruleSimpleSelector 
	 { $current=$iv_ruleSimpleSelector.current; } 
	 EOF 
;

// Rule SimpleSelector
ruleSimpleSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_element_0_0=RULE_ID
		{
			newLeafNode(lv_element_0_0, grammarAccess.getSimpleSelectorAccess().getElementIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"element",
        		lv_element_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorAccess().getIdIdSelectorParserRuleCall_1_0_0()); 
	    }
		lv_id_1_0=ruleIdSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"io.lattekit.dsl.LatteCSS.IdSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorAccess().getPseudoClassPseudoClassSelectorParserRuleCall_1_1_0()); 
	    }
		lv_pseudoClass_2_0=rulePseudoClassSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
	        }
       		set(
       			$current, 
       			"pseudoClass",
        		lv_pseudoClass_2_0, 
        		"io.lattekit.dsl.LatteCSS.PseudoClassSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorAccess().getClassClassSelectorParserRuleCall_2_0_0()); 
	    }
		lv_class_3_0=ruleClassSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
	        }
       		set(
       			$current, 
       			"class",
        		lv_class_3_0, 
        		"io.lattekit.dsl.LatteCSS.ClassSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorAccess().getPseudoClassPseudoClassSelectorParserRuleCall_2_1_0()); 
	    }
		lv_pseudoClass_4_0=rulePseudoClassSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorRule());
	        }
       		set(
       			$current, 
       			"pseudoClass",
        		lv_pseudoClass_4_0, 
        		"io.lattekit.dsl.LatteCSS.PseudoClassSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
;





// Entry rule entryRuleIdSelector
entryRuleIdSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdSelectorRule()); }
	 iv_ruleIdSelector=ruleIdSelector 
	 { $current=$iv_ruleIdSelector.current; } 
	 EOF 
;

// Rule IdSelector
ruleIdSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIdSelectorAccess().getNumberSignKeyword_0());
    }
(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getIdSelectorAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleClassSelector
entryRuleClassSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassSelectorRule()); }
	 iv_ruleClassSelector=ruleClassSelector 
	 { $current=$iv_ruleClassSelector.current; } 
	 EOF 
;

// Rule ClassSelector
ruleClassSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='.' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassSelectorAccess().getFullStopKeyword_0());
    }
(
(
		lv_class_1_0=RULE_ID
		{
			newLeafNode(lv_class_1_0, grammarAccess.getClassSelectorAccess().getClassIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"class",
        		lv_class_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRulePseudoClassSelector
entryRulePseudoClassSelector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPseudoClassSelectorRule()); }
	 iv_rulePseudoClassSelector=rulePseudoClassSelector 
	 { $current=$iv_rulePseudoClassSelector.current; } 
	 EOF 
;

// Rule PseudoClassSelector
rulePseudoClassSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPseudoClassSelectorAccess().getColonKeyword_0());
    }
(
(
		lv_value_1_0=RULE_ID
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPseudoClassSelectorAccess().getValueIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoClassSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleCSSProperty
entryRuleCSSProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCSSPropertyRule()); }
	 iv_ruleCSSProperty=ruleCSSProperty 
	 { $current=$iv_ruleCSSProperty.current; } 
	 EOF 
;

// Rule CSSProperty
ruleCSSProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getTransitionPropertyParserRuleCall_0_0()); 
    }
    this_TransitionProperty_0=ruleTransitionProperty
    { 
        $current = $this_TransitionProperty_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getFontFamilyPropertyParserRuleCall_0_1()); 
    }
    this_FontFamilyProperty_1=ruleFontFamilyProperty
    { 
        $current = $this_FontFamilyProperty_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getFontStylePropertyParserRuleCall_0_2()); 
    }
    this_FontStyleProperty_2=ruleFontStyleProperty
    { 
        $current = $this_FontStyleProperty_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getSizePropertyParserRuleCall_0_3()); 
    }
    this_SizeProperty_3=ruleSizeProperty
    { 
        $current = $this_SizeProperty_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getShorthandSizePropertyParserRuleCall_0_4()); 
    }
    this_ShorthandSizeProperty_4=ruleShorthandSizeProperty
    { 
        $current = $this_ShorthandSizeProperty_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getShorthandColorPropertyParserRuleCall_0_5()); 
    }
    this_ShorthandColorProperty_5=ruleShorthandColorProperty
    { 
        $current = $this_ShorthandColorProperty_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getBorderRadiusPropertyParserRuleCall_0_6()); 
    }
    this_BorderRadiusProperty_6=ruleBorderRadiusProperty
    { 
        $current = $this_BorderRadiusProperty_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getViewSizePropertyParserRuleCall_0_7()); 
    }
    this_ViewSizeProperty_7=ruleViewSizeProperty
    { 
        $current = $this_ViewSizeProperty_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getPaintPropertyParserRuleCall_0_8()); 
    }
    this_PaintProperty_8=rulePaintProperty
    { 
        $current = $this_PaintProperty_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getColorPropertyParserRuleCall_0_9()); 
    }
    this_ColorProperty_9=ruleColorProperty
    { 
        $current = $this_ColorProperty_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getDrawablePropertyParserRuleCall_0_10()); 
    }
    this_DrawableProperty_10=ruleDrawableProperty
    { 
        $current = $this_DrawableProperty_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getBackgroundRepeatPropertyParserRuleCall_0_11()); 
    }
    this_BackgroundRepeatProperty_11=ruleBackgroundRepeatProperty
    { 
        $current = $this_BackgroundRepeatProperty_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getBackgroundFilterTypePropertyParserRuleCall_0_12()); 
    }
    this_BackgroundFilterTypeProperty_12=ruleBackgroundFilterTypeProperty
    { 
        $current = $this_BackgroundFilterTypeProperty_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getBackgroundGravityPropertyParserRuleCall_0_13()); 
    }
    this_BackgroundGravityProperty_13=ruleBackgroundGravityProperty
    { 
        $current = $this_BackgroundGravityProperty_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getBackgroundFilterPropertyParserRuleCall_0_14()); 
    }
    this_BackgroundFilterProperty_14=ruleBackgroundFilterProperty
    { 
        $current = $this_BackgroundFilterProperty_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getBorderPropertyParserRuleCall_0_15()); 
    }
    this_BorderProperty_15=ruleBorderProperty
    { 
        $current = $this_BorderProperty_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSPropertyAccess().getAlignmentPropertyParserRuleCall_0_16()); 
    }
    this_AlignmentProperty_16=ruleAlignmentProperty
    { 
        $current = $this_AlignmentProperty_16.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCSSPropertyAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleFontFamilyProperty
entryRuleFontFamilyProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontFamilyPropertyRule()); }
	 iv_ruleFontFamilyProperty=ruleFontFamilyProperty 
	 { $current=$iv_ruleFontFamilyProperty.current; } 
	 EOF 
;

// Rule FontFamilyProperty
ruleFontFamilyProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'font-family' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getFontFamilyPropertyAccess().getPropertyFontFamilyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontFamilyPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "font-family");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFontFamilyPropertyAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getFontFamilyPropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontFamilyPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleFontStyleProperty
entryRuleFontStyleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontStylePropertyRule()); }
	 iv_ruleFontStyleProperty=ruleFontStyleProperty 
	 { $current=$iv_ruleFontStyleProperty.current; } 
	 EOF 
;

// Rule FontStyleProperty
ruleFontStyleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'font-style' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getFontStylePropertyAccess().getPropertyFontStyleKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontStylePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "font-style");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFontStylePropertyAccess().getColonKeyword_1());
    }
(
(
(
		lv_value_2_1=	'normal' 
    {
        newLeafNode(lv_value_2_1, grammarAccess.getFontStylePropertyAccess().getValueNormalKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontStylePropertyRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_1, null);
	    }

    |		lv_value_2_2=	'bold' 
    {
        newLeafNode(lv_value_2_2, grammarAccess.getFontStylePropertyAccess().getValueBoldKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontStylePropertyRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_2, null);
	    }

    |		lv_value_2_3=	'bold-italic' 
    {
        newLeafNode(lv_value_2_3, grammarAccess.getFontStylePropertyAccess().getValueBoldItalicKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontStylePropertyRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_3, null);
	    }

)

)
))
;





// Entry rule entryRuleViewSizeProperty
entryRuleViewSizeProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewSizePropertyRule()); }
	 iv_ruleViewSizeProperty=ruleViewSizeProperty 
	 { $current=$iv_ruleViewSizeProperty.current; } 
	 EOF 
;

// Rule ViewSizeProperty
ruleViewSizeProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_property_0_1=	'width' 
    {
        newLeafNode(lv_property_0_1, grammarAccess.getViewSizePropertyAccess().getPropertyWidthKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_1, null);
	    }

    |		lv_property_0_2=	'height' 
    {
        newLeafNode(lv_property_0_2, grammarAccess.getViewSizePropertyAccess().getPropertyHeightKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_2, null);
	    }

)

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getViewSizePropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewSizePropertyAccess().getValueViewSizeValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleViewSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewSizePropertyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"io.lattekit.dsl.LatteCSS.ViewSizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleShorthandSizeProperty
entryRuleShorthandSizeProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShorthandSizePropertyRule()); }
	 iv_ruleShorthandSizeProperty=ruleShorthandSizeProperty 
	 { $current=$iv_ruleShorthandSizeProperty.current; } 
	 EOF 
;

// Rule ShorthandSizeProperty
ruleShorthandSizeProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_property_0_1=	'border-width' 
    {
        newLeafNode(lv_property_0_1, grammarAccess.getShorthandSizePropertyAccess().getPropertyBorderWidthKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShorthandSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_1, null);
	    }

    |		lv_property_0_2=	'border-radius' 
    {
        newLeafNode(lv_property_0_2, grammarAccess.getShorthandSizePropertyAccess().getPropertyBorderRadiusKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShorthandSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_2, null);
	    }

    |		lv_property_0_3=	'margin' 
    {
        newLeafNode(lv_property_0_3, grammarAccess.getShorthandSizePropertyAccess().getPropertyMarginKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShorthandSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_3, null);
	    }

    |		lv_property_0_4=	'padding' 
    {
        newLeafNode(lv_property_0_4, grammarAccess.getShorthandSizePropertyAccess().getPropertyPaddingKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShorthandSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_4, null);
	    }

)

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getShorthandSizePropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShorthandSizePropertyAccess().getValuesSizeValueParserRuleCall_2_0()); 
	    }
		lv_values_2_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShorthandSizePropertyRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleBorderRadiusProperty
entryRuleBorderRadiusProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBorderRadiusPropertyRule()); }
	 iv_ruleBorderRadiusProperty=ruleBorderRadiusProperty 
	 { $current=$iv_ruleBorderRadiusProperty.current; } 
	 EOF 
;

// Rule BorderRadiusProperty
ruleBorderRadiusProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_property_0_1=	'border-top-left-radius' 
    {
        newLeafNode(lv_property_0_1, grammarAccess.getBorderRadiusPropertyAccess().getPropertyBorderTopLeftRadiusKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderRadiusPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_1, null);
	    }

    |		lv_property_0_2=	'border-top-right-radius' 
    {
        newLeafNode(lv_property_0_2, grammarAccess.getBorderRadiusPropertyAccess().getPropertyBorderTopRightRadiusKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderRadiusPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_2, null);
	    }

    |		lv_property_0_3=	'border-bottom-left-radius' 
    {
        newLeafNode(lv_property_0_3, grammarAccess.getBorderRadiusPropertyAccess().getPropertyBorderBottomLeftRadiusKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderRadiusPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_3, null);
	    }

    |		lv_property_0_4=	'border-bottom-right-radius' 
    {
        newLeafNode(lv_property_0_4, grammarAccess.getBorderRadiusPropertyAccess().getPropertyBorderBottomRightRadiusKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderRadiusPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_4, null);
	    }

)

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBorderRadiusPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderRadiusPropertyAccess().getValuesSizeValueParserRuleCall_2_0()); 
	    }
		lv_values_2_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderRadiusPropertyRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleSizeProperty
entryRuleSizeProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizePropertyRule()); }
	 iv_ruleSizeProperty=ruleSizeProperty 
	 { $current=$iv_ruleSizeProperty.current; } 
	 EOF 
;

// Rule SizeProperty
ruleSizeProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_property_0_1=	'border-left-width' 
    {
        newLeafNode(lv_property_0_1, grammarAccess.getSizePropertyAccess().getPropertyBorderLeftWidthKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_1, null);
	    }

    |		lv_property_0_2=	'border-right-width' 
    {
        newLeafNode(lv_property_0_2, grammarAccess.getSizePropertyAccess().getPropertyBorderRightWidthKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_2, null);
	    }

    |		lv_property_0_3=	'border-top-width' 
    {
        newLeafNode(lv_property_0_3, grammarAccess.getSizePropertyAccess().getPropertyBorderTopWidthKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_3, null);
	    }

    |		lv_property_0_4=	'border-bottom-width' 
    {
        newLeafNode(lv_property_0_4, grammarAccess.getSizePropertyAccess().getPropertyBorderBottomWidthKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_4, null);
	    }

    |		lv_property_0_5=	'font-size' 
    {
        newLeafNode(lv_property_0_5, grammarAccess.getSizePropertyAccess().getPropertyFontSizeKeyword_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_5, null);
	    }

    |		lv_property_0_6=	'translate-x' 
    {
        newLeafNode(lv_property_0_6, grammarAccess.getSizePropertyAccess().getPropertyTranslateXKeyword_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_6, null);
	    }

    |		lv_property_0_7=	'translate-y' 
    {
        newLeafNode(lv_property_0_7, grammarAccess.getSizePropertyAccess().getPropertyTranslateYKeyword_0_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_7, null);
	    }

    |		lv_property_0_8=	'margin-left' 
    {
        newLeafNode(lv_property_0_8, grammarAccess.getSizePropertyAccess().getPropertyMarginLeftKeyword_0_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_8, null);
	    }

    |		lv_property_0_9=	'margin-right' 
    {
        newLeafNode(lv_property_0_9, grammarAccess.getSizePropertyAccess().getPropertyMarginRightKeyword_0_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_9, null);
	    }

    |		lv_property_0_10=	'margin-top' 
    {
        newLeafNode(lv_property_0_10, grammarAccess.getSizePropertyAccess().getPropertyMarginTopKeyword_0_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_10, null);
	    }

    |		lv_property_0_11=	'margin-bottom' 
    {
        newLeafNode(lv_property_0_11, grammarAccess.getSizePropertyAccess().getPropertyMarginBottomKeyword_0_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_11, null);
	    }

    |		lv_property_0_12=	'padding-left' 
    {
        newLeafNode(lv_property_0_12, grammarAccess.getSizePropertyAccess().getPropertyPaddingLeftKeyword_0_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_12, null);
	    }

    |		lv_property_0_13=	'padding-right' 
    {
        newLeafNode(lv_property_0_13, grammarAccess.getSizePropertyAccess().getPropertyPaddingRightKeyword_0_0_12());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_13, null);
	    }

    |		lv_property_0_14=	'padding-top' 
    {
        newLeafNode(lv_property_0_14, grammarAccess.getSizePropertyAccess().getPropertyPaddingTopKeyword_0_0_13());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_14, null);
	    }

    |		lv_property_0_15=	'padding-bottom' 
    {
        newLeafNode(lv_property_0_15, grammarAccess.getSizePropertyAccess().getPropertyPaddingBottomKeyword_0_0_14());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_15, null);
	    }

    |		lv_property_0_16=	'x' 
    {
        newLeafNode(lv_property_0_16, grammarAccess.getSizePropertyAccess().getPropertyXKeyword_0_0_15());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_16, null);
	    }

    |		lv_property_0_17=	'y' 
    {
        newLeafNode(lv_property_0_17, grammarAccess.getSizePropertyAccess().getPropertyYKeyword_0_0_16());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_17, null);
	    }

    |		lv_property_0_18=	'elevation' 
    {
        newLeafNode(lv_property_0_18, grammarAccess.getSizePropertyAccess().getPropertyElevationKeyword_0_0_17());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_18, null);
	    }

)

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSizePropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSizePropertyAccess().getValueSizeValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizePropertyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePaintProperty
entryRulePaintProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPaintPropertyRule()); }
	 iv_rulePaintProperty=rulePaintProperty 
	 { $current=$iv_rulePaintProperty.current; } 
	 EOF 
;

// Rule PaintProperty
rulePaintProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'background' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getPaintPropertyAccess().getPropertyBackgroundKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPaintPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "background");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPaintPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPaintPropertyAccess().getValuePaintValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=rulePaintValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPaintPropertyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"io.lattekit.dsl.LatteCSS.PaintValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTransitionProperty
entryRuleTransitionProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionPropertyRule()); }
	 iv_ruleTransitionProperty=ruleTransitionProperty 
	 { $current=$iv_ruleTransitionProperty.current; } 
	 EOF 
;

// Rule TransitionProperty
ruleTransitionProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'transition' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getTransitionPropertyAccess().getPropertyTransitionKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "transition");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionPropertyAccess().getTransitionsTransitionValueParserRuleCall_2_0()); 
	    }
		lv_transitions_2_0=ruleTransitionValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionPropertyRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_2_0, 
        		"io.lattekit.dsl.LatteCSS.TransitionValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTransitionPropertyAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionPropertyAccess().getTransitionsTransitionValueParserRuleCall_3_1_0()); 
	    }
		lv_transitions_4_0=ruleTransitionValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionPropertyRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_4_0, 
        		"io.lattekit.dsl.LatteCSS.TransitionValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTransitionValue
entryRuleTransitionValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionValueRule()); }
	 iv_ruleTransitionValue=ruleTransitionValue 
	 { $current=$iv_ruleTransitionValue.current; } 
	 EOF 
;

// Rule TransitionValue
ruleTransitionValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionValueAccess().getPropertyNamePropertyNameValueParserRuleCall_0_0()); 
	    }
		lv_propertyName_0_0=rulePropertyNameValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionValueRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_0_0, 
        		"io.lattekit.dsl.LatteCSS.PropertyNameValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionValueAccess().getDurationTimeValueParserRuleCall_1_0()); 
	    }
		lv_duration_1_0=ruleTimeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionValueRule());
	        }
       		set(
       			$current, 
       			"duration",
        		lv_duration_1_0, 
        		"io.lattekit.dsl.LatteCSS.TimeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionValueAccess().getTimingFunctionTimingFunctionParserRuleCall_2_0()); 
	    }
		lv_timingFunction_2_0=ruleTimingFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionValueRule());
	        }
       		set(
       			$current, 
       			"timingFunction",
        		lv_timingFunction_2_0, 
        		"io.lattekit.dsl.LatteCSS.TimingFunction");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionValueAccess().getDelayTimeValueParserRuleCall_3_0()); 
	    }
		lv_delay_3_0=ruleTimeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionValueRule());
	        }
       		set(
       			$current, 
       			"delay",
        		lv_delay_3_0, 
        		"io.lattekit.dsl.LatteCSS.TimeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleDrawableProperty
entryRuleDrawableProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDrawablePropertyRule()); }
	 iv_ruleDrawableProperty=ruleDrawableProperty 
	 { $current=$iv_ruleDrawableProperty.current; } 
	 EOF 
;

// Rule DrawableProperty
ruleDrawableProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'background-drawable' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getDrawablePropertyAccess().getPropertyBackgroundDrawableKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDrawablePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "background-drawable");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDrawablePropertyAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getDrawablePropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDrawablePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleBackgroundRepeatProperty
entryRuleBackgroundRepeatProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBackgroundRepeatPropertyRule()); }
	 iv_ruleBackgroundRepeatProperty=ruleBackgroundRepeatProperty 
	 { $current=$iv_ruleBackgroundRepeatProperty.current; } 
	 EOF 
;

// Rule BackgroundRepeatProperty
ruleBackgroundRepeatProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'background-repeat' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getBackgroundRepeatPropertyAccess().getPropertyBackgroundRepeatKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBackgroundRepeatPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "background-repeat");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBackgroundRepeatPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundRepeatPropertyAccess().getValuesRepeatValueParserRuleCall_2_0()); 
	    }
		lv_values_2_0=ruleRepeatValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundRepeatPropertyRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"io.lattekit.dsl.LatteCSS.RepeatValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundRepeatPropertyAccess().getValuesRepeatValueParserRuleCall_3_0()); 
	    }
		lv_values_3_0=ruleRepeatValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundRepeatPropertyRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"io.lattekit.dsl.LatteCSS.RepeatValue");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBorderProperty
entryRuleBorderProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBorderPropertyRule()); }
	 iv_ruleBorderProperty=ruleBorderProperty 
	 { $current=$iv_ruleBorderProperty.current; } 
	 EOF 
;

// Rule BorderProperty
ruleBorderProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_property_0_1=	'border' 
    {
        newLeafNode(lv_property_0_1, grammarAccess.getBorderPropertyAccess().getPropertyBorderKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_1, null);
	    }

    |		lv_property_0_2=	'border-top' 
    {
        newLeafNode(lv_property_0_2, grammarAccess.getBorderPropertyAccess().getPropertyBorderTopKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_2, null);
	    }

    |		lv_property_0_3=	'border-bottom' 
    {
        newLeafNode(lv_property_0_3, grammarAccess.getBorderPropertyAccess().getPropertyBorderBottomKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_3, null);
	    }

    |		lv_property_0_4=	'border-left' 
    {
        newLeafNode(lv_property_0_4, grammarAccess.getBorderPropertyAccess().getPropertyBorderLeftKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_4, null);
	    }

    |		lv_property_0_5=	'border-right' 
    {
        newLeafNode(lv_property_0_5, grammarAccess.getBorderPropertyAccess().getPropertyBorderRightKeyword_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_5, null);
	    }

)

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBorderPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderPropertyAccess().getWidthSizeValueParserRuleCall_2_0()); 
	    }
		lv_width_2_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderPropertyRule());
	        }
       		set(
       			$current, 
       			"width",
        		lv_width_2_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
(
		lv_style_3_1=	'solid' 
    {
        newLeafNode(lv_style_3_1, grammarAccess.getBorderPropertyAccess().getStyleSolidKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderPropertyRule());
	        }
       		setWithLastConsumed($current, "style", lv_style_3_1, null);
	    }

    |		lv_style_3_2=	'dashed' 
    {
        newLeafNode(lv_style_3_2, grammarAccess.getBorderPropertyAccess().getStyleDashedKeyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderPropertyRule());
	        }
       		setWithLastConsumed($current, "style", lv_style_3_2, null);
	    }

    |		lv_style_3_3=	'dotted' 
    {
        newLeafNode(lv_style_3_3, grammarAccess.getBorderPropertyAccess().getStyleDottedKeyword_3_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBorderPropertyRule());
	        }
       		setWithLastConsumed($current, "style", lv_style_3_3, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderPropertyAccess().getColorColorValueParserRuleCall_4_0()); 
	    }
		lv_color_4_0=ruleColorValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderPropertyRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_4_0, 
        		"io.lattekit.dsl.LatteCSS.ColorValue");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBackgroundFilterProperty
entryRuleBackgroundFilterProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBackgroundFilterPropertyRule()); }
	 iv_ruleBackgroundFilterProperty=ruleBackgroundFilterProperty 
	 { $current=$iv_ruleBackgroundFilterProperty.current; } 
	 EOF 
;

// Rule BackgroundFilterProperty
ruleBackgroundFilterProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'background-filter' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getBackgroundFilterPropertyAccess().getPropertyBackgroundFilterKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBackgroundFilterPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "background-filter");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBackgroundFilterPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundFilterPropertyAccess().getColorColorValueParserRuleCall_2_0()); 
	    }
		lv_color_2_0=ruleColorValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundFilterPropertyRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_2_0, 
        		"io.lattekit.dsl.LatteCSS.ColorValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundFilterPropertyAccess().getFilterFilterValueParserRuleCall_3_0()); 
	    }
		lv_filter_3_0=ruleFilterValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundFilterPropertyRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_3_0, 
        		"io.lattekit.dsl.LatteCSS.FilterValue");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleRepeatValue
entryRuleRepeatValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepeatValueRule()); } 
	 iv_ruleRepeatValue=ruleRepeatValue 
	 { $current=$iv_ruleRepeatValue.current.getText(); }  
	 EOF 
;

// Rule RepeatValue
ruleRepeatValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='repeat-x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRepeatValueAccess().getRepeatXKeyword_0()); 
    }

    |
	kw='mirror-x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRepeatValueAccess().getMirrorXKeyword_1()); 
    }

    |
	kw='clamp-x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRepeatValueAccess().getClampXKeyword_2()); 
    }

    |
	kw='no-repeat-x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRepeatValueAccess().getNoRepeatXKeyword_3()); 
    }

    |
	kw='repeat-y' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRepeatValueAccess().getRepeatYKeyword_4()); 
    }

    |
	kw='mirror-y' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRepeatValueAccess().getMirrorYKeyword_5()); 
    }

    |
	kw='clamp-y' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRepeatValueAccess().getClampYKeyword_6()); 
    }

    |
	kw='no-repeat-y' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRepeatValueAccess().getNoRepeatYKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleGravityValue
entryRuleGravityValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGravityValueRule()); } 
	 iv_ruleGravityValue=ruleGravityValue 
	 { $current=$iv_ruleGravityValue.current.getText(); }  
	 EOF 
;

// Rule GravityValue
ruleGravityValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='top' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getTopKeyword_0()); 
    }

    |
	kw='bottom' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getBottomKeyword_1()); 
    }

    |
	kw='left' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getLeftKeyword_2()); 
    }

    |
	kw='right' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getRightKeyword_3()); 
    }

    |
	kw='center_vertical' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getCenter_verticalKeyword_4()); 
    }

    |
	kw='fill_vertical' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getFill_verticalKeyword_5()); 
    }

    |
	kw='center_horizontal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getCenter_horizontalKeyword_6()); 
    }

    |
	kw='fill_horizontal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getFill_horizontalKeyword_7()); 
    }

    |
	kw='center' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getCenterKeyword_8()); 
    }

    |
	kw='fill' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getFillKeyword_9()); 
    }

    |
	kw='clip_vertical' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getClip_verticalKeyword_10()); 
    }

    |
	kw='clip_horizontal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getClip_horizontalKeyword_11()); 
    }

    |
	kw='start' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getStartKeyword_12()); 
    }

    |
	kw='end' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGravityValueAccess().getEndKeyword_13()); 
    }
)
    ;





// Entry rule entryRuleBackgroundGravityProperty
entryRuleBackgroundGravityProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBackgroundGravityPropertyRule()); }
	 iv_ruleBackgroundGravityProperty=ruleBackgroundGravityProperty 
	 { $current=$iv_ruleBackgroundGravityProperty.current; } 
	 EOF 
;

// Rule BackgroundGravityProperty
ruleBackgroundGravityProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'background-gravity' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getBackgroundGravityPropertyAccess().getPropertyBackgroundGravityKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBackgroundGravityPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "background-gravity");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBackgroundGravityPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundGravityPropertyAccess().getValuesGravityValueParserRuleCall_2_0()); 
	    }
		lv_values_2_0=ruleGravityValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundGravityPropertyRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"io.lattekit.dsl.LatteCSS.GravityValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBackgroundGravityPropertyAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundGravityPropertyAccess().getValuesGravityValueParserRuleCall_3_1_0()); 
	    }
		lv_values_4_0=ruleGravityValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundGravityPropertyRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"io.lattekit.dsl.LatteCSS.GravityValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFilterValue
entryRuleFilterValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilterValueRule()); } 
	 iv_ruleFilterValue=ruleFilterValue 
	 { $current=$iv_ruleFilterValue.current.getText(); }  
	 EOF 
;

// Rule FilterValue
ruleFilterValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='add' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getAddKeyword_0()); 
    }

    |
	kw='clear' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getClearKeyword_1()); 
    }

    |
	kw='darken' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getDarkenKeyword_2()); 
    }

    |
	kw='dst' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getDstKeyword_3()); 
    }

    |
	kw='dst_atop' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getDst_atopKeyword_4()); 
    }

    |
	kw='dst_in' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getDst_inKeyword_5()); 
    }

    |
	kw='dst_out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getDst_outKeyword_6()); 
    }

    |
	kw='dst_over' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getDst_overKeyword_7()); 
    }

    |
	kw='lighten' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getLightenKeyword_8()); 
    }

    |
	kw='multiply' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getMultiplyKeyword_9()); 
    }

    |
	kw='overlay' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getOverlayKeyword_10()); 
    }

    |
	kw='screen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getScreenKeyword_11()); 
    }

    |
	kw='src' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getSrcKeyword_12()); 
    }

    |
	kw='src_atop' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getSrc_atopKeyword_13()); 
    }

    |
	kw='src_in' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getSrc_inKeyword_14()); 
    }

    |
	kw='src_out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getSrc_outKeyword_15()); 
    }

    |
	kw='src_over' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getSrc_overKeyword_16()); 
    }

    |
	kw='xor' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFilterValueAccess().getXorKeyword_17()); 
    }
)
    ;





// Entry rule entryRuleBackgroundFilterTypeProperty
entryRuleBackgroundFilterTypeProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBackgroundFilterTypePropertyRule()); }
	 iv_ruleBackgroundFilterTypeProperty=ruleBackgroundFilterTypeProperty 
	 { $current=$iv_ruleBackgroundFilterTypeProperty.current; } 
	 EOF 
;

// Rule BackgroundFilterTypeProperty
ruleBackgroundFilterTypeProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'background-filter-type' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getBackgroundFilterTypePropertyAccess().getPropertyBackgroundFilterTypeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBackgroundFilterTypePropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "background-filter-type");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBackgroundFilterTypePropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundFilterTypePropertyAccess().getValueFilterValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleFilterValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundFilterTypePropertyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"io.lattekit.dsl.LatteCSS.FilterValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleShorthandColorProperty
entryRuleShorthandColorProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShorthandColorPropertyRule()); }
	 iv_ruleShorthandColorProperty=ruleShorthandColorProperty 
	 { $current=$iv_ruleShorthandColorProperty.current; } 
	 EOF 
;

// Rule ShorthandColorProperty
ruleShorthandColorProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'border-color' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getShorthandColorPropertyAccess().getPropertyBorderColorKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShorthandColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "border-color");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getShorthandColorPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShorthandColorPropertyAccess().getValuesColorValueParserRuleCall_2_0()); 
	    }
		lv_values_2_0=ruleColorValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShorthandColorPropertyRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"io.lattekit.dsl.LatteCSS.ColorValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleColorProperty
entryRuleColorProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorPropertyRule()); }
	 iv_ruleColorProperty=ruleColorProperty 
	 { $current=$iv_ruleColorProperty.current; } 
	 EOF 
;

// Rule ColorProperty
ruleColorProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_property_0_1=	'border-top-color' 
    {
        newLeafNode(lv_property_0_1, grammarAccess.getColorPropertyAccess().getPropertyBorderTopColorKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_1, null);
	    }

    |		lv_property_0_2=	'border-left-color' 
    {
        newLeafNode(lv_property_0_2, grammarAccess.getColorPropertyAccess().getPropertyBorderLeftColorKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_2, null);
	    }

    |		lv_property_0_3=	'border-right-color' 
    {
        newLeafNode(lv_property_0_3, grammarAccess.getColorPropertyAccess().getPropertyBorderRightColorKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_3, null);
	    }

    |		lv_property_0_4=	'border-bottom-color' 
    {
        newLeafNode(lv_property_0_4, grammarAccess.getColorPropertyAccess().getPropertyBorderBottomColorKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_4, null);
	    }

    |		lv_property_0_5=	'ripple-color' 
    {
        newLeafNode(lv_property_0_5, grammarAccess.getColorPropertyAccess().getPropertyRippleColorKeyword_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_5, null);
	    }

    |		lv_property_0_6=	'background-color' 
    {
        newLeafNode(lv_property_0_6, grammarAccess.getColorPropertyAccess().getPropertyBackgroundColorKeyword_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_6, null);
	    }

    |		lv_property_0_7=	'text-color' 
    {
        newLeafNode(lv_property_0_7, grammarAccess.getColorPropertyAccess().getPropertyTextColorKeyword_0_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_7, null);
	    }

    |		lv_property_0_8=	'background-filter-color' 
    {
        newLeafNode(lv_property_0_8, grammarAccess.getColorPropertyAccess().getPropertyBackgroundFilterColorKeyword_0_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_8, null);
	    }

)

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getColorPropertyAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getColorPropertyAccess().getValueColorValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleColorValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorPropertyRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"io.lattekit.dsl.LatteCSS.ColorValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAlignmentProperty
entryRuleAlignmentProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlignmentPropertyRule()); }
	 iv_ruleAlignmentProperty=ruleAlignmentProperty 
	 { $current=$iv_ruleAlignmentProperty.current; } 
	 EOF 
;

// Rule AlignmentProperty
ruleAlignmentProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_property_0_0=	'text-align' 
    {
        newLeafNode(lv_property_0_0, grammarAccess.getAlignmentPropertyAccess().getPropertyTextAlignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlignmentPropertyRule());
	        }
       		setWithLastConsumed($current, "property", lv_property_0_0, "text-align");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlignmentPropertyAccess().getColonKeyword_1());
    }
(
(
(
		lv_value_2_1=	'left' 
    {
        newLeafNode(lv_value_2_1, grammarAccess.getAlignmentPropertyAccess().getValueLeftKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlignmentPropertyRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_1, null);
	    }

    |		lv_value_2_2=	'center' 
    {
        newLeafNode(lv_value_2_2, grammarAccess.getAlignmentPropertyAccess().getValueCenterKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlignmentPropertyRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_2, null);
	    }

    |		lv_value_2_3=	'right' 
    {
        newLeafNode(lv_value_2_3, grammarAccess.getAlignmentPropertyAccess().getValueRightKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlignmentPropertyRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_3, null);
	    }

    |		lv_value_2_4=	'justify' 
    {
        newLeafNode(lv_value_2_4, grammarAccess.getAlignmentPropertyAccess().getValueJustifyKeyword_2_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlignmentPropertyRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_4, null);
	    }

)

)
))
;





// Entry rule entryRuleTimingFunction
entryRuleTimingFunction returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimingFunctionRule()); } 
	 iv_ruleTimingFunction=ruleTimingFunction 
	 { $current=$iv_ruleTimingFunction.current.getText(); }  
	 EOF 
;

// Rule TimingFunction
ruleTimingFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='accelerate-decelerate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getAccelerateDecelerateKeyword_0()); 
    }

    |
	kw='accelerate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getAccelerateKeyword_1()); 
    }

    |
	kw='anticipate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getAnticipateKeyword_2()); 
    }

    |
	kw='anticipate-overshoot' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getAnticipateOvershootKeyword_3()); 
    }

    |
	kw='bounce' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getBounceKeyword_4()); 
    }

    |
	kw='cycle' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getCycleKeyword_5()); 
    }

    |
	kw='decelerate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getDecelerateKeyword_6()); 
    }

    |
	kw='fast-out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getFastOutKeyword_7()); 
    }

    |
	kw='fast-out-slow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getFastOutSlowKeyword_8()); 
    }

    |
	kw='linear' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getLinearKeyword_9()); 
    }

    |
	kw='linear-out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getLinearOutKeyword_10()); 
    }

    |
	kw='overshoot' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimingFunctionAccess().getOvershootKeyword_11()); 
    }
)
    ;





// Entry rule entryRulePropertyNameValue
entryRulePropertyNameValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyNameValueRule()); } 
	 iv_rulePropertyNameValue=rulePropertyNameValue 
	 { $current=$iv_rulePropertyNameValue.current.getText(); }  
	 EOF 
;

// Rule PropertyNameValue
rulePropertyNameValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='margin' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getMarginKeyword_0()); 
    }

    |
	kw='margin-top' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getMarginTopKeyword_1()); 
    }

    |
	kw='margin-bottom' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getMarginBottomKeyword_2()); 
    }

    |
	kw='margin-left' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getMarginLeftKeyword_3()); 
    }

    |
	kw='margin-right' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getMarginRightKeyword_4()); 
    }

    |
	kw='padding' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getPaddingKeyword_5()); 
    }

    |
	kw='padding-top' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getPaddingTopKeyword_6()); 
    }

    |
	kw='padding-bottom' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getPaddingBottomKeyword_7()); 
    }

    |
	kw='padding-left' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getPaddingLeftKeyword_8()); 
    }

    |
	kw='padding-right' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getPaddingRightKeyword_9()); 
    }

    |
	kw='width' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getWidthKeyword_10()); 
    }

    |
	kw='height' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getHeightKeyword_11()); 
    }

    |
	kw='translateX' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getTranslateXKeyword_12()); 
    }

    |
	kw='translateY' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getTranslateYKeyword_13()); 
    }

    |
	kw='x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getXKeyword_14()); 
    }

    |
	kw='y' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getYKeyword_15()); 
    }

    |
	kw='elevation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getElevationKeyword_16()); 
    }

    |
	kw='font-size' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getFontSizeKeyword_17()); 
    }

    |
	kw='border-radius' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderRadiusKeyword_18()); 
    }

    |
	kw='border-top-left-radius' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderTopLeftRadiusKeyword_19()); 
    }

    |
	kw='border-top-right-radius' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderTopRightRadiusKeyword_20()); 
    }

    |
	kw='border-bottom-left-radius' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderBottomLeftRadiusKeyword_21()); 
    }

    |
	kw='border-bottom-right-radius' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderBottomRightRadiusKeyword_22()); 
    }

    |
	kw='border-width' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderWidthKeyword_23()); 
    }

    |
	kw='border-left-width' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderLeftWidthKeyword_24()); 
    }

    |
	kw='border-right-width' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderRightWidthKeyword_25()); 
    }

    |
	kw='border-top-width' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderTopWidthKeyword_26()); 
    }

    |
	kw='border-bottom-width' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderBottomWidthKeyword_27()); 
    }

    |
	kw='border' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameValueAccess().getBorderKeyword_28()); 
    }
)
    ;





// Entry rule entryRuleNumberValue
entryRuleNumberValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberValueRule()); } 
	 iv_ruleNumberValue=ruleNumberValue 
	 { $current=$iv_ruleNumberValue.current.getText(); }  
	 EOF 
;

// Rule NumberValue
ruleNumberValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNumberValueAccess().getIntegerValueParserRuleCall_0()); 
    }
    this_IntegerValue_0=ruleIntegerValue    {
		$current.merge(this_IntegerValue_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumberValueAccess().getRealValueParserRuleCall_1()); 
    }
    this_RealValue_1=ruleRealValue    {
		$current.merge(this_RealValue_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleIntegerValue
entryRuleIntegerValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerValueRule()); } 
	 iv_ruleIntegerValue=ruleIntegerValue 
	 { $current=$iv_ruleIntegerValue.current.getText(); }  
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getIntegerValueAccess().getINTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleRealValue
entryRuleRealValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealValueRule()); } 
	 iv_ruleRealValue=ruleRealValue 
	 { $current=$iv_ruleRealValue.current.getText(); }  
	 EOF 
;

// Rule RealValue
ruleRealValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_REAL_0=RULE_REAL    {
		$current.merge(this_REAL_0);
    }

    { 
    newLeafNode(this_REAL_0, grammarAccess.getRealValueAccess().getREALTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleTimeValue
entryRuleTimeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeValueRule()); }
	 iv_ruleTimeValue=ruleTimeValue 
	 { $current=$iv_ruleTimeValue.current; } 
	 EOF 
;

// Rule TimeValue
ruleTimeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTimeValueAccess().getTimeNumberValueParserRuleCall_0_0()); 
	    }
		lv_time_0_0=ruleNumberValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeValueRule());
	        }
       		set(
       			$current, 
       			"time",
        		lv_time_0_0, 
        		"io.lattekit.dsl.LatteCSS.NumberValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_unit_1_1=	's' 
    {
        newLeafNode(lv_unit_1_1, grammarAccess.getTimeValueAccess().getUnitSKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeValueRule());
	        }
       		setWithLastConsumed($current, "unit", lv_unit_1_1, null);
	    }

    |		lv_unit_1_2=	'ms' 
    {
        newLeafNode(lv_unit_1_2, grammarAccess.getTimeValueAccess().getUnitMsKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeValueRule());
	        }
       		setWithLastConsumed($current, "unit", lv_unit_1_2, null);
	    }

)

)
))
;





// Entry rule entryRuleViewSizeValue
entryRuleViewSizeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewSizeValueRule()); }
	 iv_ruleViewSizeValue=ruleViewSizeValue 
	 { $current=$iv_ruleViewSizeValue.current; } 
	 EOF 
;

// Rule ViewSizeValue
ruleViewSizeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getViewSizeValueAccess().getValueSizeValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewSizeValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
(
		lv_dynamic_1_1=	'match_parent' 
    {
        newLeafNode(lv_dynamic_1_1, grammarAccess.getViewSizeValueAccess().getDynamicMatch_parentKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewSizeValueRule());
	        }
       		setWithLastConsumed($current, "dynamic", lv_dynamic_1_1, null);
	    }

    |		lv_dynamic_1_2=	'wrap_content' 
    {
        newLeafNode(lv_dynamic_1_2, grammarAccess.getViewSizeValueAccess().getDynamicWrap_contentKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewSizeValueRule());
	        }
       		setWithLastConsumed($current, "dynamic", lv_dynamic_1_2, null);
	    }

)

)
))
;





// Entry rule entryRuleSizeValue
entryRuleSizeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeValueRule()); }
	 iv_ruleSizeValue=ruleSizeValue 
	 { $current=$iv_ruleSizeValue.current; } 
	 EOF 
;

// Rule SizeValue
ruleSizeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSizeValueAccess().getValueNumberValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleNumberValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"io.lattekit.dsl.LatteCSS.NumberValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_dimension_1_1=	'dp' 
    {
        newLeafNode(lv_dimension_1_1, grammarAccess.getSizeValueAccess().getDimensionDpKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeValueRule());
	        }
       		setWithLastConsumed($current, "dimension", lv_dimension_1_1, null);
	    }

    |		lv_dimension_1_2=	'px' 
    {
        newLeafNode(lv_dimension_1_2, grammarAccess.getSizeValueAccess().getDimensionPxKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeValueRule());
	        }
       		setWithLastConsumed($current, "dimension", lv_dimension_1_2, null);
	    }

    |		lv_dimension_1_3=	'sp' 
    {
        newLeafNode(lv_dimension_1_3, grammarAccess.getSizeValueAccess().getDimensionSpKeyword_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeValueRule());
	        }
       		setWithLastConsumed($current, "dimension", lv_dimension_1_3, null);
	    }

    |		lv_dimension_1_4=	'pt' 
    {
        newLeafNode(lv_dimension_1_4, grammarAccess.getSizeValueAccess().getDimensionPtKeyword_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeValueRule());
	        }
       		setWithLastConsumed($current, "dimension", lv_dimension_1_4, null);
	    }

    |		lv_dimension_1_5=	'mm' 
    {
        newLeafNode(lv_dimension_1_5, grammarAccess.getSizeValueAccess().getDimensionMmKeyword_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeValueRule());
	        }
       		setWithLastConsumed($current, "dimension", lv_dimension_1_5, null);
	    }

)

)
)?)
;









// Entry rule entryRulePaintValue
entryRulePaintValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPaintValueRule()); }
	 iv_rulePaintValue=rulePaintValue 
	 { $current=$iv_rulePaintValue.current; } 
	 EOF 
;

// Rule PaintValue
rulePaintValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPaintValueAccess().getLinearGradientParserRuleCall_0()); 
    }
    this_LinearGradient_0=ruleLinearGradient
    { 
        $current = $this_LinearGradient_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPaintValueAccess().getRadialGradientParserRuleCall_1()); 
    }
    this_RadialGradient_1=ruleRadialGradient
    { 
        $current = $this_RadialGradient_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPaintValueAccess().getColorValueParserRuleCall_2()); 
    }
    this_ColorValue_2=ruleColorValue
    { 
        $current = $this_ColorValue_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLinearGradient
entryRuleLinearGradient returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinearGradientRule()); }
	 iv_ruleLinearGradient=ruleLinearGradient 
	 { $current=$iv_ruleLinearGradient.current; } 
	 EOF 
;

// Rule LinearGradient
ruleLinearGradient returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='linear' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinearGradientAccess().getLinearKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinearGradientAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearGradientAccess().getX1SizeValueParserRuleCall_2_0()); 
	    }
		lv_x1_2_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearGradientRule());
	        }
       		set(
       			$current, 
       			"x1",
        		lv_x1_2_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinearGradientAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearGradientAccess().getY1SizeValueParserRuleCall_4_0()); 
	    }
		lv_y1_4_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearGradientRule());
	        }
       		set(
       			$current, 
       			"y1",
        		lv_y1_4_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLinearGradientAccess().getRightParenthesisKeyword_5());
    }
	otherlv_6='to' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLinearGradientAccess().getToKeyword_6());
    }
	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLinearGradientAccess().getLeftParenthesisKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearGradientAccess().getX2SizeValueParserRuleCall_8_0()); 
	    }
		lv_x2_8_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearGradientRule());
	        }
       		set(
       			$current, 
       			"x2",
        		lv_x2_8_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLinearGradientAccess().getCommaKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearGradientAccess().getY2SizeValueParserRuleCall_10_0()); 
	    }
		lv_y2_10_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearGradientRule());
	        }
       		set(
       			$current, 
       			"y2",
        		lv_y2_10_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLinearGradientAccess().getRightParenthesisKeyword_11());
    }
	otherlv_12='stops' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLinearGradientAccess().getStopsKeyword_12());
    }
(	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLinearGradientAccess().getLeftParenthesisKeyword_13_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearGradientAccess().getStopsStopValueParserRuleCall_13_1_0()); 
	    }
		lv_stops_14_0=ruleStopValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearGradientRule());
	        }
       		add(
       			$current, 
       			"stops",
        		lv_stops_14_0, 
        		"io.lattekit.dsl.LatteCSS.StopValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLinearGradientAccess().getRightParenthesisKeyword_13_2());
    }
)+(	otherlv_16='repeat' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getLinearGradientAccess().getRepeatKeyword_14_0());
    }

    |	otherlv_17='reflect' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getLinearGradientAccess().getReflectKeyword_14_1());
    }
)?)
;





// Entry rule entryRuleRadialGradient
entryRuleRadialGradient returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRadialGradientRule()); }
	 iv_ruleRadialGradient=ruleRadialGradient 
	 { $current=$iv_ruleRadialGradient.current; } 
	 EOF 
;

// Rule RadialGradient
ruleRadialGradient returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='radial' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRadialGradientAccess().getRadialKeyword_0());
    }
(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRadialGradientAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRadialGradientAccess().getCxSizeValueParserRuleCall_1_1_0()); 
	    }
		lv_cx_2_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadialGradientRule());
	        }
       		set(
       			$current, 
       			"cx",
        		lv_cx_2_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRadialGradientAccess().getCommaKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRadialGradientAccess().getCySizeValueParserRuleCall_1_3_0()); 
	    }
		lv_cy_4_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadialGradientRule());
	        }
       		set(
       			$current, 
       			"cy",
        		lv_cy_4_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRadialGradientAccess().getRightParenthesisKeyword_1_4());
    }
	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRadialGradientAccess().getCommaKeyword_1_5());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRadialGradientAccess().getRadiusSizeValueParserRuleCall_2_0()); 
	    }
		lv_radius_7_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadialGradientRule());
	        }
       		set(
       			$current, 
       			"radius",
        		lv_radius_7_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='focus' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRadialGradientAccess().getFocusKeyword_3_0());
    }
	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRadialGradientAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRadialGradientAccess().getFxSizeValueParserRuleCall_3_2_0()); 
	    }
		lv_fx_10_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadialGradientRule());
	        }
       		set(
       			$current, 
       			"fx",
        		lv_fx_10_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRadialGradientAccess().getCommaKeyword_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRadialGradientAccess().getFySizeValueParserRuleCall_3_4_0()); 
	    }
		lv_fy_12_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadialGradientRule());
	        }
       		set(
       			$current, 
       			"fy",
        		lv_fy_12_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRadialGradientAccess().getRightParenthesisKeyword_3_5());
    }
)	otherlv_14='stops' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getRadialGradientAccess().getStopsKeyword_4());
    }
(	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getRadialGradientAccess().getLeftParenthesisKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRadialGradientAccess().getStopsStopValueParserRuleCall_5_1_0()); 
	    }
		lv_stops_16_0=ruleStopValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadialGradientRule());
	        }
       		add(
       			$current, 
       			"stops",
        		lv_stops_16_0, 
        		"io.lattekit.dsl.LatteCSS.StopValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getRadialGradientAccess().getRightParenthesisKeyword_5_2());
    }
)+(	otherlv_18='repeat' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getRadialGradientAccess().getRepeatKeyword_6_0());
    }

    |	otherlv_19='reflect' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getRadialGradientAccess().getReflectKeyword_6_1());
    }
)?)
;





// Entry rule entryRuleStopValue
entryRuleStopValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStopValueRule()); }
	 iv_ruleStopValue=ruleStopValue 
	 { $current=$iv_ruleStopValue.current; } 
	 EOF 
;

// Rule StopValue
ruleStopValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStopValueAccess().getPosSizeValueParserRuleCall_0_0()); 
	    }
		lv_pos_0_0=ruleSizeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStopValueRule());
	        }
       		set(
       			$current, 
       			"pos",
        		lv_pos_0_0, 
        		"io.lattekit.dsl.LatteCSS.SizeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStopValueAccess().getCommaKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStopValueAccess().getColorColorValueParserRuleCall_2_0()); 
	    }
		lv_color_2_0=ruleColorValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStopValueRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_2_0, 
        		"io.lattekit.dsl.LatteCSS.ColorValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleColorValue
entryRuleColorValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorValueRule()); }
	 iv_ruleColorValue=ruleColorValue 
	 { $current=$iv_ruleColorValue.current; } 
	 EOF 
;

// Rule ColorValue
ruleColorValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getColorValueAccess().getNamedColorNamedColorParserRuleCall_0_0()); 
	    }
		lv_namedColor_0_0=ruleNamedColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorValueRule());
	        }
       		set(
       			$current, 
       			"namedColor",
        		lv_namedColor_0_0, 
        		"io.lattekit.dsl.LatteCSS.NamedColor");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getColorValueAccess().getRgbRGBColorParserRuleCall_1_0()); 
	    }
		lv_rgb_1_0=ruleRGBColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorValueRule());
	        }
       		set(
       			$current, 
       			"rgb",
        		lv_rgb_1_0, 
        		"io.lattekit.dsl.LatteCSS.RGBColor");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNamedColor
entryRuleNamedColor returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedColorRule()); } 
	 iv_ruleNamedColor=ruleNamedColor 
	 { $current=$iv_ruleNamedColor.current.getText(); }  
	 EOF 
;

// Rule NamedColor
ruleNamedColor returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='aliceblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getAliceblueKeyword_0()); 
    }

    |
	kw='antiquewhite' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getAntiquewhiteKeyword_1()); 
    }

    |
	kw='aqua' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getAquaKeyword_2()); 
    }

    |
	kw='aquamarine' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getAquamarineKeyword_3()); 
    }

    |
	kw='azure' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getAzureKeyword_4()); 
    }

    |
	kw='beige' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getBeigeKeyword_5()); 
    }

    |
	kw='bisque' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getBisqueKeyword_6()); 
    }

    |
	kw='black' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getBlackKeyword_7()); 
    }

    |
	kw='blanchedalmond' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getBlanchedalmondKeyword_8()); 
    }

    |
	kw='blue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getBlueKeyword_9()); 
    }

    |
	kw='blueviolet' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getBluevioletKeyword_10()); 
    }

    |
	kw='brown' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getBrownKeyword_11()); 
    }

    |
	kw='burlywood' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getBurlywoodKeyword_12()); 
    }

    |
	kw='cadetblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getCadetblueKeyword_13()); 
    }

    |
	kw='chartreuse' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getChartreuseKeyword_14()); 
    }

    |
	kw='chocolate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getChocolateKeyword_15()); 
    }

    |
	kw='coral' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getCoralKeyword_16()); 
    }

    |
	kw='cornflowerblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getCornflowerblueKeyword_17()); 
    }

    |
	kw='cornsilk' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getCornsilkKeyword_18()); 
    }

    |
	kw='crimson' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getCrimsonKeyword_19()); 
    }

    |
	kw='cyan' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getCyanKeyword_20()); 
    }

    |
	kw='darkblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkblueKeyword_21()); 
    }

    |
	kw='darkcyan' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkcyanKeyword_22()); 
    }

    |
	kw='darkgoldenrod' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkgoldenrodKeyword_23()); 
    }

    |
	kw='darkgray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkgrayKeyword_24()); 
    }

    |
	kw='darkgreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkgreenKeyword_25()); 
    }

    |
	kw='darkgrey' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkgreyKeyword_26()); 
    }

    |
	kw='darkkhaki' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkkhakiKeyword_27()); 
    }

    |
	kw='darkmagenta' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkmagentaKeyword_28()); 
    }

    |
	kw='darkolivegreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkolivegreenKeyword_29()); 
    }

    |
	kw='darkorange' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkorangeKeyword_30()); 
    }

    |
	kw='darkorchid' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkorchidKeyword_31()); 
    }

    |
	kw='darkred' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkredKeyword_32()); 
    }

    |
	kw='darksalmon' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarksalmonKeyword_33()); 
    }

    |
	kw='darkseagreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkseagreenKeyword_34()); 
    }

    |
	kw='darkslateblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkslateblueKeyword_35()); 
    }

    |
	kw='darkslategray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkslategrayKeyword_36()); 
    }

    |
	kw='darkslategrey' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkslategreyKeyword_37()); 
    }

    |
	kw='darkturquoise' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkturquoiseKeyword_38()); 
    }

    |
	kw='darkviolet' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDarkvioletKeyword_39()); 
    }

    |
	kw='deeppink' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDeeppinkKeyword_40()); 
    }

    |
	kw='deepskyblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDeepskyblueKeyword_41()); 
    }

    |
	kw='dimgray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDimgrayKeyword_42()); 
    }

    |
	kw='dimgrey' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDimgreyKeyword_43()); 
    }

    |
	kw='dodgerblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getDodgerblueKeyword_44()); 
    }

    |
	kw='firebrick' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getFirebrickKeyword_45()); 
    }

    |
	kw='floralwhite' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getFloralwhiteKeyword_46()); 
    }

    |
	kw='forestgreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getForestgreenKeyword_47()); 
    }

    |
	kw='fuchsia' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getFuchsiaKeyword_48()); 
    }

    |
	kw='gainsboro' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getGainsboroKeyword_49()); 
    }

    |
	kw='ghostwhite' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getGhostwhiteKeyword_50()); 
    }

    |
	kw='gold' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getGoldKeyword_51()); 
    }

    |
	kw='goldenrod' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getGoldenrodKeyword_52()); 
    }

    |
	kw='gray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getGrayKeyword_53()); 
    }

    |
	kw='green' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getGreenKeyword_54()); 
    }

    |
	kw='greenyellow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getGreenyellowKeyword_55()); 
    }

    |
	kw='grey' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getGreyKeyword_56()); 
    }

    |
	kw='honeydew' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getHoneydewKeyword_57()); 
    }

    |
	kw='hotpink' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getHotpinkKeyword_58()); 
    }

    |
	kw='indianred' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getIndianredKeyword_59()); 
    }

    |
	kw='indigo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getIndigoKeyword_60()); 
    }

    |
	kw='ivory' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getIvoryKeyword_61()); 
    }

    |
	kw='khaki' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getKhakiKeyword_62()); 
    }

    |
	kw='lavender' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLavenderKeyword_63()); 
    }

    |
	kw='lavenderblush' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLavenderblushKeyword_64()); 
    }

    |
	kw='lawngreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLawngreenKeyword_65()); 
    }

    |
	kw='lemonchiffon' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLemonchiffonKeyword_66()); 
    }

    |
	kw='lightblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightblueKeyword_67()); 
    }

    |
	kw='lightcoral' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightcoralKeyword_68()); 
    }

    |
	kw='lightcyan' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightcyanKeyword_69()); 
    }

    |
	kw='lightgoldenrodyellow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightgoldenrodyellowKeyword_70()); 
    }

    |
	kw='lightgray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightgrayKeyword_71()); 
    }

    |
	kw='lightgreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightgreenKeyword_72()); 
    }

    |
	kw='lightgrey' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightgreyKeyword_73()); 
    }

    |
	kw='lightpink' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightpinkKeyword_74()); 
    }

    |
	kw='lightsalmon' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightsalmonKeyword_75()); 
    }

    |
	kw='lightseagreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightseagreenKeyword_76()); 
    }

    |
	kw='lightskyblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightskyblueKeyword_77()); 
    }

    |
	kw='lightslategray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightslategrayKeyword_78()); 
    }

    |
	kw='lightslategrey' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightslategreyKeyword_79()); 
    }

    |
	kw='lightsteelblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightsteelblueKeyword_80()); 
    }

    |
	kw='lightyellow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLightyellowKeyword_81()); 
    }

    |
	kw='lime' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLimeKeyword_82()); 
    }

    |
	kw='limegreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLimegreenKeyword_83()); 
    }

    |
	kw='linen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getLinenKeyword_84()); 
    }

    |
	kw='magenta' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMagentaKeyword_85()); 
    }

    |
	kw='maroon' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMaroonKeyword_86()); 
    }

    |
	kw='mediumaquamarine' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumaquamarineKeyword_87()); 
    }

    |
	kw='mediumblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumblueKeyword_88()); 
    }

    |
	kw='mediumorchid' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumorchidKeyword_89()); 
    }

    |
	kw='mediumpurple' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumpurpleKeyword_90()); 
    }

    |
	kw='mediumseagreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumseagreenKeyword_91()); 
    }

    |
	kw='mediumslateblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumslateblueKeyword_92()); 
    }

    |
	kw='mediumspringgreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumspringgreenKeyword_93()); 
    }

    |
	kw='mediumturquoise' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumturquoiseKeyword_94()); 
    }

    |
	kw='mediumvioletred' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMediumvioletredKeyword_95()); 
    }

    |
	kw='midnightblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMidnightblueKeyword_96()); 
    }

    |
	kw='mintcream' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMintcreamKeyword_97()); 
    }

    |
	kw='mistyrose' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMistyroseKeyword_98()); 
    }

    |
	kw='moccasin' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getMoccasinKeyword_99()); 
    }

    |
	kw='navajowhite' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getNavajowhiteKeyword_100()); 
    }

    |
	kw='navy' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getNavyKeyword_101()); 
    }

    |
	kw='oldlace' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getOldlaceKeyword_102()); 
    }

    |
	kw='olive' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getOliveKeyword_103()); 
    }

    |
	kw='olivedrab' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getOlivedrabKeyword_104()); 
    }

    |
	kw='orange' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getOrangeKeyword_105()); 
    }

    |
	kw='orangered' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getOrangeredKeyword_106()); 
    }

    |
	kw='orchid' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getOrchidKeyword_107()); 
    }

    |
	kw='palegoldenrod' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPalegoldenrodKeyword_108()); 
    }

    |
	kw='palegreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPalegreenKeyword_109()); 
    }

    |
	kw='paleturquoise' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPaleturquoiseKeyword_110()); 
    }

    |
	kw='palevioletred' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPalevioletredKeyword_111()); 
    }

    |
	kw='papayawhip' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPapayawhipKeyword_112()); 
    }

    |
	kw='peachpuff' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPeachpuffKeyword_113()); 
    }

    |
	kw='peru' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPeruKeyword_114()); 
    }

    |
	kw='pink' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPinkKeyword_115()); 
    }

    |
	kw='plum' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPlumKeyword_116()); 
    }

    |
	kw='powderblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPowderblueKeyword_117()); 
    }

    |
	kw='purple' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getPurpleKeyword_118()); 
    }

    |
	kw='red' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getRedKeyword_119()); 
    }

    |
	kw='rosybrown' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getRosybrownKeyword_120()); 
    }

    |
	kw='royalblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getRoyalblueKeyword_121()); 
    }

    |
	kw='saddlebrown' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSaddlebrownKeyword_122()); 
    }

    |
	kw='salmon' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSalmonKeyword_123()); 
    }

    |
	kw='sandybrown' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSandybrownKeyword_124()); 
    }

    |
	kw='seagreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSeagreenKeyword_125()); 
    }

    |
	kw='seashell' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSeashellKeyword_126()); 
    }

    |
	kw='sienna' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSiennaKeyword_127()); 
    }

    |
	kw='silver' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSilverKeyword_128()); 
    }

    |
	kw='skyblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSkyblueKeyword_129()); 
    }

    |
	kw='slateblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSlateblueKeyword_130()); 
    }

    |
	kw='slategray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSlategrayKeyword_131()); 
    }

    |
	kw='slategrey' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSlategreyKeyword_132()); 
    }

    |
	kw='snow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSnowKeyword_133()); 
    }

    |
	kw='springgreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSpringgreenKeyword_134()); 
    }

    |
	kw='steelblue' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getSteelblueKeyword_135()); 
    }

    |
	kw='tan' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getTanKeyword_136()); 
    }

    |
	kw='teal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getTealKeyword_137()); 
    }

    |
	kw='thistle' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getThistleKeyword_138()); 
    }

    |
	kw='tomato' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getTomatoKeyword_139()); 
    }

    |
	kw='turquoise' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getTurquoiseKeyword_140()); 
    }

    |
	kw='violet' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getVioletKeyword_141()); 
    }

    |
	kw='wheat' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getWheatKeyword_142()); 
    }

    |
	kw='white' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getWhiteKeyword_143()); 
    }

    |
	kw='whitesmoke' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getWhitesmokeKeyword_144()); 
    }

    |
	kw='yellow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getYellowKeyword_145()); 
    }

    |
	kw='yellowgreen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getYellowgreenKeyword_146()); 
    }

    |
	kw='transparent' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamedColorAccess().getTransparentKeyword_147()); 
    }
)
    ;





// Entry rule entryRuleRGBColor
entryRuleRGBColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRGBColorRule()); }
	 iv_ruleRGBColor=ruleRGBColor 
	 { $current=$iv_ruleRGBColor.current; } 
	 EOF 
;

// Rule RGBColor
ruleRGBColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_hex_0_0=RULE_HEX_NUMBER
		{
			newLeafNode(lv_hex_0_0, grammarAccess.getRGBColorAccess().getHexHEX_NUMBERTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRGBColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hex",
        		lv_hex_0_0, 
        		"io.lattekit.dsl.LatteCSS.HEX_NUMBER");
	    }

)
)
    |(	otherlv_1='rgb' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRGBColorAccess().getRgbKeyword_1_0());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRGBColorAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRGBColorAccess().getRIntegerValueParserRuleCall_1_2_0()); 
	    }
		lv_r_3_0=ruleIntegerValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRGBColorRule());
	        }
       		set(
       			$current, 
       			"r",
        		lv_r_3_0, 
        		"io.lattekit.dsl.LatteCSS.IntegerValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRGBColorAccess().getCommaKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRGBColorAccess().getGIntegerValueParserRuleCall_1_4_0()); 
	    }
		lv_g_5_0=ruleIntegerValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRGBColorRule());
	        }
       		set(
       			$current, 
       			"g",
        		lv_g_5_0, 
        		"io.lattekit.dsl.LatteCSS.IntegerValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRGBColorAccess().getCommaKeyword_1_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRGBColorAccess().getBIntegerValueParserRuleCall_1_6_0()); 
	    }
		lv_b_7_0=ruleIntegerValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRGBColorRule());
	        }
       		set(
       			$current, 
       			"b",
        		lv_b_7_0, 
        		"io.lattekit.dsl.LatteCSS.IntegerValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRGBColorAccess().getRightParenthesisKeyword_1_7());
    }
)
    |(	otherlv_9='rgba' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRGBColorAccess().getRgbaKeyword_2_0());
    }
	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRGBColorAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRGBColorAccess().getRIntegerValueParserRuleCall_2_2_0()); 
	    }
		lv_r_11_0=ruleIntegerValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRGBColorRule());
	        }
       		set(
       			$current, 
       			"r",
        		lv_r_11_0, 
        		"io.lattekit.dsl.LatteCSS.IntegerValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRGBColorAccess().getCommaKeyword_2_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRGBColorAccess().getGIntegerValueParserRuleCall_2_4_0()); 
	    }
		lv_g_13_0=ruleIntegerValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRGBColorRule());
	        }
       		set(
       			$current, 
       			"g",
        		lv_g_13_0, 
        		"io.lattekit.dsl.LatteCSS.IntegerValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getRGBColorAccess().getCommaKeyword_2_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRGBColorAccess().getBIntegerValueParserRuleCall_2_6_0()); 
	    }
		lv_b_15_0=ruleIntegerValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRGBColorRule());
	        }
       		set(
       			$current, 
       			"b",
        		lv_b_15_0, 
        		"io.lattekit.dsl.LatteCSS.IntegerValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getRGBColorAccess().getCommaKeyword_2_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRGBColorAccess().getAlphaNumberValueParserRuleCall_2_8_0()); 
	    }
		lv_alpha_17_0=ruleNumberValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRGBColorRule());
	        }
       		set(
       			$current, 
       			"alpha",
        		lv_alpha_17_0, 
        		"io.lattekit.dsl.LatteCSS.NumberValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getRGBColorAccess().getRightParenthesisKeyword_2_9());
    }
))
;









RULE_REAL : '-'? ('0'..'9')+ '.' ('0'..'9')+;

RULE_HEX_NUMBER : '#' ('a'..'f'|'A'..'F'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


